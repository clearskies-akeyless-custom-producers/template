name: Bump Version and Create Release

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'The type of version bump'
        required: true
        type: choice
        default: 'patch'
        options:
          - patch
          - minor
          - major
          - stable # For going from pre-release to stable
          - alpha
          - beta
          - rc   # release candidate
          - post # post-release
          - dev  # dev-release

jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # ... (Install uv and Configure Git steps remain the same) ...
      - name: Configure Git author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump version and get new tag
        id: bump
        run: |
          uv version --bump ${{ inputs.bump_type }}
          NEW_VERSION=$(grep '^version = ' pyproject.toml | cut -d '"' -f 2)
          echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT

      # STEP 1: Commit and Tag the version bump FIRST
      - name: Commit and Tag the Version Bump
        run: |
          git add pyproject.toml
          git commit -m "chore(release): bump version to ${{ steps.bump.outputs.tag }}"
          git tag -a "${{ steps.bump.outputs.tag }}" -m "Release ${{ steps.bump.outputs.tag }}"

      # STEP 2: Now that the tag exists, generate the changelog
      - name: Update Main Changelog with New Release
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: --tag ${{ steps.bump.outputs.tag }} --prepend CHANGELOG.md

      # STEP 3: Extract the latest entry for the release body
      - name: Extract Latest Changelog for Release Body
        id: changelog
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: --tag ${{ steps.bump.outputs.tag }} --latest
        env:
          OUTPUT: LATEST_CHANGELOG.md

      # STEP 4: Commit the CHANGELOG.md changes and push everything
      - name: Commit Changelog and Push All Changes
        run: |
          git add CHANGELOG.md
          # Amend the previous commit to include the changelog
          git commit --amend --no-edit
          # Push the commit and the tag
          git push --follow-tags

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump.outputs.tag }}
          release_name: "Release ${{ steps.bump.outputs.tag }}"
          body_path: ${{ steps.changelog.outputs.changelog }}
          prerelease: ${{ contains(inputs.bump_type, 'alpha') || contains(inputs.bump_type, 'beta') || contains(inputs.bump_type, 'rc') }}
