# Basic project information
service_name:
  type: str
  help: Name of the service (e.g., gitlab, snyk, wiz)
  default: myservice

service_display_name:
  type: str
  help: Display name of the service (e.g., GitLab, Snyk, Wiz)
  default: My Service

# Author information
author_name:
  type: str
  help: Your name
  default:

author_email:
  type: str
  help: Your email
  default:

# Feature configuration
service_supports_rotation:
  type: bool
  help: Does this service support credential rotation?
  default: true

service_supports_revocation:
  type: bool
  help: Does this service support credential revocation?
  default: false

package_name:
  type: str
  help: The name of the package to be created (e.g., myservice)
  default: clearskies_akeyless_custom_{{ service_name|replace('-', '_') }}
  when: false

_subdirectory: template_content
_templates_suffix: .jinja

# Template metadata for updates
_envops:
  block_start_string: '{%'
  block_end_string: '%}'
  variable_start_string: '{{'
  variable_end_string: '}}'
  comment_start_string: '{#'
  comment_end_string: '#}'

# Make sure git metadata is preserved for updates
_preserve_symlinks: true

# Conditional file creation
_skip_if:
  - 'src/{{ package_name }}/rotate.py.jinja': '{{ not service_supports_rotation }}'
  - 'src/{{ package_name }}/revoke.py.jinja': '{{ not service_supports_revocation }}'

_skip_if_exists:
    - "pyproject.toml"
    - "uv.lock"
    - 'src/{{ package_name }}/rotate.py'
    - 'src/{{ package_name }}/revoke.py'
    - 'src/{{ package_name }}/create.py'
    - 'src/{{ package_name }}/__init__.py'

# Post-generation tasks
_tasks:
  - command: git init
    description: Initialize git repository
    wwhen: "{{ _copier_operation == 'copy' }}"
  - command: uv sync
    description: Install dependencies and create virtual environment
  - command: uv run pre-commit install
    description: Install pre-commit hooks
    when: "{{ _copier_operation == 'copy' }}"
  - command: git add .
    description: Stage all files
    when: "{{ _copier_operation == 'copy' }}"
  - command: uv run pre-commit run --all-files || true
    description: Run pre-commit on all files
  - command: git add .
    description: Stage all files
    when: "{{ _copier_operation == 'copy' }}"
  - command: "git commit -m 'Initial project setup'"
    description: Create initial commit
    when: "{{ _copier_operation == 'copy' }}"
  - command: "echo 'Project setup complete! Next steps: activate your venv, start coding, and check the README for more info.'"
    description: Print next steps
    when: "{{ _copier_operation == 'copy' }}"
